(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{332:function(a,t,r){"use strict";r.r(t);var s=r(0),e=Object(s.a)({},(function(){var a=this,t=a.$createElement,r=a._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("h1",{attrs:{id:"一、grid概述"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#一、grid概述"}},[a._v("#")]),a._v(" 一、Grid概述")]),a._v(" "),r("p",[a._v("Grid 布局与 Flex 布局有一定的相似性，都可以指定容器内部多个项目的位置。但是，它们也存在重大区别。")]),a._v(" "),r("p",[a._v('Flex 布局是轴线布局，只能指定"项目"针对轴线的位置，可以看作是一维布局。Grid 布局则是将容器划分成"行"和"列"，产生单元格，然后指定"项目所在"的单元格，可以看作是二维布局。Grid 布局远比 Flex 布局强大。')]),a._v(" "),r("h1",{attrs:{id:"二、基本概念"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二、基本概念"}},[a._v("#")]),a._v(" 二、基本概念")]),a._v(" "),r("h2",{attrs:{id:"_2-1-容器和项目"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-容器和项目"}},[a._v("#")]),a._v(" 2.1 容器和项目")]),a._v(" "),r("p",[a._v('采用网格布局的区域，称为"容器"（container）。容器内部采用网格定位的子元素，称为"项目"（item）。')]),a._v(" "),r("h2",{attrs:{id:"_2-2-行和列"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-行和列"}},[a._v("#")]),a._v(" 2.2 行和列")]),a._v(" "),r("p",[a._v('容器里面的水平区域称为"行"（row），垂直区域称为"列"（column）。')]),a._v(" "),r("h2",{attrs:{id:"_2-3-单元格"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-单元格"}},[a._v("#")]),a._v(" 2.3 单元格")]),a._v(" "),r("p",[a._v('行和列的交叉区域，称为"单元格"（cell）。')]),a._v(" "),r("p",[a._v("正常情况下，n行和m列会产生n x m个单元格。比如，3行3列会产生9个单元格。")]),a._v(" "),r("h2",{attrs:{id:"_2-4-网格线"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-网格线"}},[a._v("#")]),a._v(" 2.4 网格线")]),a._v(" "),r("p",[a._v('划分网格的线，称为"网格线"（grid line）。水平网格线划分出行，垂直网格线划分出列。')]),a._v(" "),r("p",[a._v("正常情况下，n行有n + 1根水平网格线，m列有m + 1根垂直网格线，比如三行就有四根水平网格线。")]),a._v(" "),r("h1",{attrs:{id:"三、容器属性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#三、容器属性"}},[a._v("#")]),a._v(" 三、容器属性")]),a._v(" "),r("h2",{attrs:{id:"_3-1-display"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-display"}},[a._v("#")]),a._v(" 3.1 display")]),a._v(" "),r("p",[a._v("display: grid指定一个容器采用网格布局。\n默认情况下，容器元素都是块级元素，但也可以设成行内元素（display: inline-grid）")]),a._v(" "),r("blockquote",[r("p",[a._v("注意，设为网格布局以后，容器子元素（项目）的float、display: inline-block、display: table-cell、vertical-align和column-*等设置都将失效。")])]),a._v(" "),r("h2",{attrs:{id:"_3-2-grid-template-rows-grid-template-columns-grid-template"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-grid-template-rows-grid-template-columns-grid-template"}},[a._v("#")]),a._v(" 3.2 grid-template-rows, grid-template-columns, grid-template")]),a._v(" "),r("p",[a._v("grid-template-columns属性定义每一列的列宽，grid-template-rows属性定义每一行的行高。")]),a._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v('display: grid;\ngrid-template-rows: 100px 100px 100px;\ngrid-template-columns: 33.33% 33.33% 33.33%;\n\n- 1 repeat\nrepeat()函数，简化重复的值。\n\ngrid-template-rows: repeat(3, 33.33%);\ngrid-template-rows: repeat(3, 100px);\ngrid-template-rows: repeat(3, 10px 20px 30px);\n\n- 2 auto-fill\n有时，单元格的大小是固定的，但是容器的大小不确定。如果希望每一行（或每一列）容纳尽可能多的单元格，这时可以使用auto-fill关键字表示自动填充。\ngrid-template-columns: repeat(auto-fill, 100px);\n\n- 3 fr关键字\n为了方便表示比例关系，网格布局提供了fr关键字（fraction 的缩写，意为"片段"）。如果两列的宽度分别为1fr和2fr，就表示后者是前者的两倍。\n\ngrid-template-rows: 1fr 2fr;\n\nfr可以与绝对长度的单位结合使用，这时会非常方便。\n\ngrid-template-rows: 10px 1fr 2fr;\n\n思考：用来做自适应布局。\n- 4 minmax()\nminmax()函数产生一个长度范围，表示长度就在这个范围之中。它接受两个参数，分别为最小值和最大值。\n\ngrid-template-columns: 1fr 1fr minmax(100px, 1fr);\n\n- 5 auto关键字\nauto关键字表示由浏览器自己决定长度。\n\ngrid-template-columns: 100px auto 100px;\n\n- 6 网格线的名称\ngrid-template-columns属性和grid-template-rows属性里面，还可以使用方括号，指定每一根网格线的名字，方便以后的引用。\n网格布局允许同一根线有多个名字，比如[fifth-line row-5]。\n\ngrid-template-columns: [c1] 10px [c2] 10px [c3 c-3]\n\n- 7 布局实例\n两栏布局\ndisplay: grid;\ngrid-template-columns: 30% 70%;\n\n空间居中布局\ndisplay: grid;\nplace-items: center;\n\n三明治布局\ndisplay: grid;\ngrid-template-rows: auto 1fr auto;\n// grid-template-rows: auto minmax(100px, 1fr) auto;\n\n\n圣杯布局\ndisplay: grid;\ngrid-template: auto 1fr auto / auto 1fr auto;\n\n')])]),a._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[a._v("1")]),r("br"),r("span",{staticClass:"line-number"},[a._v("2")]),r("br"),r("span",{staticClass:"line-number"},[a._v("3")]),r("br"),r("span",{staticClass:"line-number"},[a._v("4")]),r("br"),r("span",{staticClass:"line-number"},[a._v("5")]),r("br"),r("span",{staticClass:"line-number"},[a._v("6")]),r("br"),r("span",{staticClass:"line-number"},[a._v("7")]),r("br"),r("span",{staticClass:"line-number"},[a._v("8")]),r("br"),r("span",{staticClass:"line-number"},[a._v("9")]),r("br"),r("span",{staticClass:"line-number"},[a._v("10")]),r("br"),r("span",{staticClass:"line-number"},[a._v("11")]),r("br"),r("span",{staticClass:"line-number"},[a._v("12")]),r("br"),r("span",{staticClass:"line-number"},[a._v("13")]),r("br"),r("span",{staticClass:"line-number"},[a._v("14")]),r("br"),r("span",{staticClass:"line-number"},[a._v("15")]),r("br"),r("span",{staticClass:"line-number"},[a._v("16")]),r("br"),r("span",{staticClass:"line-number"},[a._v("17")]),r("br"),r("span",{staticClass:"line-number"},[a._v("18")]),r("br"),r("span",{staticClass:"line-number"},[a._v("19")]),r("br"),r("span",{staticClass:"line-number"},[a._v("20")]),r("br"),r("span",{staticClass:"line-number"},[a._v("21")]),r("br"),r("span",{staticClass:"line-number"},[a._v("22")]),r("br"),r("span",{staticClass:"line-number"},[a._v("23")]),r("br"),r("span",{staticClass:"line-number"},[a._v("24")]),r("br"),r("span",{staticClass:"line-number"},[a._v("25")]),r("br"),r("span",{staticClass:"line-number"},[a._v("26")]),r("br"),r("span",{staticClass:"line-number"},[a._v("27")]),r("br"),r("span",{staticClass:"line-number"},[a._v("28")]),r("br"),r("span",{staticClass:"line-number"},[a._v("29")]),r("br"),r("span",{staticClass:"line-number"},[a._v("30")]),r("br"),r("span",{staticClass:"line-number"},[a._v("31")]),r("br"),r("span",{staticClass:"line-number"},[a._v("32")]),r("br"),r("span",{staticClass:"line-number"},[a._v("33")]),r("br"),r("span",{staticClass:"line-number"},[a._v("34")]),r("br"),r("span",{staticClass:"line-number"},[a._v("35")]),r("br"),r("span",{staticClass:"line-number"},[a._v("36")]),r("br"),r("span",{staticClass:"line-number"},[a._v("37")]),r("br"),r("span",{staticClass:"line-number"},[a._v("38")]),r("br"),r("span",{staticClass:"line-number"},[a._v("39")]),r("br"),r("span",{staticClass:"line-number"},[a._v("40")]),r("br"),r("span",{staticClass:"line-number"},[a._v("41")]),r("br"),r("span",{staticClass:"line-number"},[a._v("42")]),r("br"),r("span",{staticClass:"line-number"},[a._v("43")]),r("br"),r("span",{staticClass:"line-number"},[a._v("44")]),r("br"),r("span",{staticClass:"line-number"},[a._v("45")]),r("br"),r("span",{staticClass:"line-number"},[a._v("46")]),r("br"),r("span",{staticClass:"line-number"},[a._v("47")]),r("br"),r("span",{staticClass:"line-number"},[a._v("48")]),r("br"),r("span",{staticClass:"line-number"},[a._v("49")]),r("br"),r("span",{staticClass:"line-number"},[a._v("50")]),r("br"),r("span",{staticClass:"line-number"},[a._v("51")]),r("br"),r("span",{staticClass:"line-number"},[a._v("52")]),r("br"),r("span",{staticClass:"line-number"},[a._v("53")]),r("br"),r("span",{staticClass:"line-number"},[a._v("54")]),r("br"),r("span",{staticClass:"line-number"},[a._v("55")]),r("br"),r("span",{staticClass:"line-number"},[a._v("56")]),r("br"),r("span",{staticClass:"line-number"},[a._v("57")]),r("br"),r("span",{staticClass:"line-number"},[a._v("58")]),r("br"),r("span",{staticClass:"line-number"},[a._v("59")]),r("br"),r("span",{staticClass:"line-number"},[a._v("60")]),r("br")])]),r("h2",{attrs:{id:"_3-3-grid-row-gap-grid-column-gap-gird-gap"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-grid-row-gap-grid-column-gap-gird-gap"}},[a._v("#")]),a._v(" 3.3 grid-row-gap, grid-column-gap, gird-gap")]),a._v(" "),r("p",[a._v("grid-row-gap属性设置行与行的间隔（行间距），grid-column-gap属性设置列与列的间隔（列间距）。")]),a._v(" "),r("p",[a._v("grid-row-gap: 10px;\ngrid-column-gap: 10px;")]),a._v(" "),r("p",[a._v("grid-gap: 10px 10px;\ngrid-gap: 10px;")]),a._v(" "),r("blockquote",[r("p",[a._v("根据最新标准，上面三个属性名的grid-前缀已经删除，grid-column-gap和grid-row-gap写成column-gap和row-gap，grid-gap写成gap。")])]),a._v(" "),r("p",[a._v("row-gap: 10px;\ncolumn-gap: 10px;\ngap: 10px 10px;\ngap: 10px;")]),a._v(" "),r("h2",{attrs:{id:"_3-4-grid-template-areas属性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-grid-template-areas属性"}},[a._v("#")]),a._v(" 3.4 grid-template-areas属性")]),a._v(" "),r("p",[a._v('网格布局允许指定"区域"（area），一个区域由单个或多个单元格组成。grid-template-areas属性用于定义区域。')]),a._v(" "),r("p",[a._v("grid-template-areas: 'a b c'\n'd e f'\n'g h i';")]),a._v(" "),r("p",[a._v('如果某些区域不需要利用，则使用"点"（.）表示。中间一列为点，表示没有用到该单元格，或者该单元格不属于任何区域。')]),a._v(" "),r("p",[a._v("grid-template-areas: 'a · c'\n'd · f'\n'g · i';")]),a._v(" "),r("blockquote",[r("p",[a._v("注意，区域的命名会影响到网格线。每个区域的起始网格线，会自动命名为区域名-start，终止网格线自动命名为区域名-end。")])]),a._v(" "),r("blockquote",[r("p",[a._v("比如，区域名为header，则起始位置的水平网格线和垂直网格线叫做header-start，终止位置的水平网格线和垂直网格线叫做header-end。")])]),a._v(" "),r("h2",{attrs:{id:"_3-5-grid-auto-flow-属性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-grid-auto-flow-属性"}},[a._v("#")]),a._v(" 3.5 grid-auto-flow 属性")]),a._v(" "),r("p",[a._v('划分网格以后，容器的子元素会按照顺序，自动放置在每一个网格。默认的放置顺序是"先行后列"，即先填满第一行，再开始放入第二行。')]),a._v(" "),r("p",[a._v("grid-auto-flow: row; // 先行后列\ngrid-auto-flow: column; // 先列后行")]),a._v(" "),r("p",[a._v("grid-auto-flow: row dense; // 先行后列，空的会被补齐\ngird-auto-flow: column dense; // 先列后行，空的会被补齐")]),a._v(" "),r("h2",{attrs:{id:"_3-6-justify-items-align-items-place-items-属性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-justify-items-align-items-place-items-属性"}},[a._v("#")]),a._v(" 3.6 justify-items, align-items, place-items 属性")]),a._v(" "),r("p",[a._v("justify-items属性设置单元格内容的水平位置（左中右），align-items属性设置单元格内容的垂直位置（上中下）。")]),a._v(" "),r("p",[a._v(".container {\njustify-items: start | end | center | stretch;\nalign-items: start | end | center | stretch;\n}")]),a._v(" "),r("p",[a._v("place-items属性是align-items属性和justify-items属性的合并简写形式。如果省略第二个值，则浏览器认为与第一个值相等。\nplace-items: "),r("align-items",[r("justify-items",[a._v(";")])],1)],1),a._v(" "),r("h2",{attrs:{id:"_3-7-justify-content-align-content-place-content-属性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-7-justify-content-align-content-place-content-属性"}},[a._v("#")]),a._v(" 3.7 justify-content, align-content, place-content 属性")]),a._v(" "),r("p",[a._v("justify-content属性是整个内容区域在容器里面的水平位置（左中右），align-content属性是整个内容区域的垂直位置（上中下）。")]),a._v(" "),r("p",[a._v(".container {\njustify-content: start | end | center | stretch | space-around | space-between | space-evenly;\nalign-content: start | end | center | stretch | space-around | space-between | space-evenly;\n}\nspace-evenly: 项目与项目的间隔相等，项目与容器边框之间也是同样长度的间隔。")]),a._v(" "),r("p",[a._v("place-content属性是align-content属性和justify-content属性的合并简写形式。如果省略第二个值，浏览器就会假定第二个值等于第一个值。\nplace-content: "),r("align-content",[r("justify-content")],1)],1),a._v(" "),r("h2",{attrs:{id:"_3-8-grid-auto-columns-grid-auto-rows"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-8-grid-auto-columns-grid-auto-rows"}},[a._v("#")]),a._v(" 3.8 grid-auto-columns, grid-auto-rows")]),a._v(" "),r("p",[a._v("grid-auto-columns属性和grid-auto-rows属性用来设置，浏览器自动创建的多余网格的列宽和行高。它们的写法与grid-template-columns和grid-template-rows完全相同。如果不指定这两个属性，浏览器完全根据单元格内容的大小，决定新增网格的列宽和行高。")]),a._v(" "),r("h2",{attrs:{id:"_3-9-grid-template-grid属性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-9-grid-template-grid属性"}},[a._v("#")]),a._v(" 3.9 grid-template, grid属性")]),a._v(" "),r("p",[a._v("grid-template属性是grid-template-columns、grid-template-rows和grid-template-areas这三个属性的合并简写形式。")]),a._v(" "),r("p",[a._v("grid属性是grid-template-rows、grid-template-columns、grid-template-areas、 grid-auto-rows、grid-auto-columns、grid-auto-flow这六个属性的合并简写形式。")]),a._v(" "),r("blockquote",[r("p",[a._v("从易读易写的角度考虑，还是建议不要合并属性，所以这里就不详细介绍这两个属性了。")])]),a._v(" "),r("h1",{attrs:{id:"四、项目属性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#四、项目属性"}},[a._v("#")]),a._v(" 四、项目属性")]),a._v(" "),r("h2",{attrs:{id:"_4-1-grid-row-start-grid-row-end-grid-column-start-grid-column-end-属性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-grid-row-start-grid-row-end-grid-column-start-grid-column-end-属性"}},[a._v("#")]),a._v(" 4.1 grid-row-start, grid-row-end, grid-column-start, grid-column-end 属性")]),a._v(" "),r("p",[a._v("项目的位置是可以指定的，具体方法就是指定项目的四个边框，分别定位在哪根网格线。\ngrid-column-start属性：左边框所在的垂直网格线\ngrid-column-end属性：右边框所在的垂直网格线\ngrid-row-start属性：上边框所在的水平网格线\ngrid-row-end属性：下边框所在的水平网格线")]),a._v(" "),r("p",[a._v(".item1 {\ngrid-column-start: 1;\ngrid-column-end: 4;")]),a._v(" "),r("pre",[r("code",[a._v('// 这四个属性的值，除了指定为第几个网格线，还可以指定为网格线的名字。\n\ngrid-row-start: header-satrt;\ngrid-row-end: header-end;\n\n// 这四个属性的值还可以使用span关键字，表示"跨越"，即左右边框（上下边框）之间跨越多少个网格。\ngrid-row-start: span 2;\n\n// 使用这四个属性，如果产生了项目的重叠，则使用z-index属性指定项目的重叠顺序。\n')])]),a._v(" "),r("p",[a._v("}")]),a._v(" "),r("h2",{attrs:{id:"_4-2-grid-column-grid-row-属性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-grid-column-grid-row-属性"}},[a._v("#")]),a._v(" 4.2 grid-column, grid-row 属性")]),a._v(" "),r("p",[a._v("grid-column属性是grid-column-start和grid-column-end的合并简写形式，grid-row属性是grid-row-start属性和grid-row-end的合并简写形式。")]),a._v(" "),r("p",[a._v(".item1 {\ngrid-column: 1 / 4;\ngrid-row: header-start / header-end;\n}")]),a._v(" "),r("h2",{attrs:{id:"_4-3-grid-area-属性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-grid-area-属性"}},[a._v("#")]),a._v(" 4.3 grid-area 属性")]),a._v(" "),r("p",[a._v("grid-area属性指定项目放在哪一个区域。")]),a._v(" "),r("p",[a._v("grid-area属性还可用作grid-row-start、grid-column-start、grid-row-end、grid-column-end的合并简写形式，直接指定项目的位置。")]),a._v(" "),r("p",[a._v("grid-area: "),r("row-start",[a._v(" / "),r("column-start",[a._v(" / "),r("row-end",[a._v(" / "),r("column-end",[a._v(";")])],1)],1)],1)],1),a._v(" "),r("h2",{attrs:{id:"_4-4-justify-self-align-self-place-self-属性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-justify-self-align-self-place-self-属性"}},[a._v("#")]),a._v(" 4.4 justify-self, align-self, place-self 属性")]),a._v(" "),r("p",[a._v("justify-self属性设置单元格内容的水平位置（左中右），跟justify-items属性的用法完全一致，但只作用于单个项目。")]),a._v(" "),r("p",[a._v("align-self属性设置单元格内容的垂直位置（上中下），跟align-items属性的用法完全一致，也是只作用于单个项目。")]),a._v(" "),r("p",[a._v(".item {\njustify-self: start | end | stretch | center;")]),a._v(" "),r("pre",[r("code",[a._v("// place-self: center;\n")])]),a._v(" "),r("p",[a._v("}")]),a._v(" "),r("p",[a._v("place-self属性是align-self属性和justify-self属性的合并简写形式。")])])}),[],!1,null,null,null);t.default=e.exports}}]);